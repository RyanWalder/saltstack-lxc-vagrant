# -*- mode: ruby -*-
# # vi: set ft=ruby :

# Specify minimum Vagrant version and Vagrant API version
Vagrant.require_version ">= 1.6.0"
VAGRANTFILE_API_VERSION = "2"

# Require YAML module
require 'yaml'

# Read YAML file with box details
servers = YAML.load_file('minions.yaml')

# Check for Salt repo env vars and raise an exception if not found
# Credit to @mneedham for his blogpost below for the code snippet to check
# envars exist.
# http://www.markhneedham.com/blog/2010/11/24/ruby-checking-for-environment-variables-in-a-script/
variables = %w{VLS_STATES VLS_PILLAR}
missing = variables.find_all { |v| ENV[v] == nil }
unless missing.empty?
  raise "The following variables are missing and are needed to run this Vagrantfile: #{missing.join(', ')}."
end

# Create boxes
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "saltmaster" do |master|
    master.vm.provider :lxc do |lxc|
      lxc.customize 'network.type', "veth"
      lxc.customize 'network.link', "lxcbr0"
      lxc.customize 'network.ipv4', "10.0.3.3/24"
    end
    master.vm.hostname = "saltmaster"
    master.vm.synced_folder ENV["VLS_STATES"], "/srv/salt"
    master.vm.synced_folder ENV["VLS_PILLAR"], "/srv/pillar"
    master.vm.box = "fgrehm/trusty64-lxc"
    master.vm.provision :salt do |config|
      config.master_config = "salt/master"
      config.minion_config = "salt/master_minion"
      config.run_highstate = false
      config.install_master = true
      config.no_minion = false
      config.verbose = true
      config.bootstrap_options = "-M"
      config.temp_config_dir = "/tmp"
      config.grains({
        environment: 'development',
        provider: 'vagrant',
        role: 'saltmaster',
    })
    end
  end

  # Iterate through entries in YAML file
  servers.each do |server|
    if server.has_key?("grains")
        sgrains = server["grains"]
    else
        sgrains = {}
    end
    default_grains = {
        environment: 'development',
        provider: 'vagrant',
    }
    sgrains = sgrains.merge(default_grains)
    config.vm.define server["name"] do |minion|
      minion.vm.box = server["box"]
      minion.vm.hostname = server["name"]
      if server.has_key?("folders")
          for pair in server["folders"]
              minion.vm.synced_folder pair["from"], pair["to"]
          end
      end
      minion.vm.provider :lxc do |lxc|
        lxc.customize 'cgroup.memory.limit_in_bytes', server["ram"]
        lxc.customize 'network.type', "veth"
        lxc.customize 'network.link', "lxcbr0"
        lxc.customize 'network.ipv4', server["ip"]
      end
      minion.vm.provision :salt do |config|
        config.minion_config = "salt/minion"
        config.verbose = true
        config.install_master = false
        config.bootstrap_options = ""
        config.temp_config_dir = "/tmp"
        config.run_highstate = false
        config.grains(sgrains)
      end
    end
  end
end
